{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sanjay Singh\\\\Downloads\\\\drawing-app\\\\src\\\\DoctorSelection.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport \"./HospitalDoctorSelection.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst doctors = {\n  1: [{\n    id: 1,\n    name: \"Dr. Smith\"\n  }, {\n    id: 2,\n    name: \"Dr. Johnson\"\n  }],\n  2: [{\n    id: 3,\n    name: \"Dr. Patel\"\n  }, {\n    id: 4,\n    name: \"Dr. Lee\"\n  }],\n  3: [{\n    id: 5,\n    name: \"Dr. Brown\"\n  }, {\n    id: 6,\n    name: \"Dr. Adams\"\n  }]\n};\nconst DoctorSelection = () => {\n  _s();\n  const navigate = useNavigate();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const hospitalId = params.get(\"hospital\");\n  const selectedDoctors = doctors[hospitalId] || [];\n  const selectDoctor = id => {\n    navigate(`/canvas?doctor=${id}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"selection-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Select a Doctor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-container\",\n      children: selectedDoctors.map(doctor => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selection-card\",\n        onClick: () => selectDoctor(doctor.id),\n        children: doctor.name\n      }, doctor.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorSelection, \"VDZHUspDq9N5O9RWjniBrjgIdAA=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = DoctorSelection;\nexport default DoctorSelection;\nvar _c;\n$RefreshReg$(_c, \"DoctorSelection\");","map":{"version":3,"names":["React","useNavigate","useLocation","jsxDEV","_jsxDEV","doctors","id","name","DoctorSelection","_s","navigate","location","params","URLSearchParams","search","hospitalId","get","selectedDoctors","selectDoctor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","doctor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Sanjay Singh/Downloads/drawing-app/src/DoctorSelection.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport \"./HospitalDoctorSelection.css\";\r\n\r\nconst doctors = {\r\n  1: [\r\n    { id: 1, name: \"Dr. Smith\" },\r\n    { id: 2, name: \"Dr. Johnson\" },\r\n  ],\r\n  2: [\r\n    { id: 3, name: \"Dr. Patel\" },\r\n    { id: 4, name: \"Dr. Lee\" },\r\n  ],\r\n  3: [\r\n    { id: 5, name: \"Dr. Brown\" },\r\n    { id: 6, name: \"Dr. Adams\" },\r\n  ],\r\n};\r\n\r\nconst DoctorSelection = () => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const params = new URLSearchParams(location.search);\r\n  const hospitalId = params.get(\"hospital\");\r\n\r\n  const selectedDoctors = doctors[hospitalId] || [];\r\n\r\n  const selectDoctor = (id) => {\r\n    navigate(`/canvas?doctor=${id}`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"selection-container\">\r\n      <h2>Select a Doctor</h2>\r\n      <div className=\"card-container\">\r\n        {selectedDoctors.map((doctor) => (\r\n          <div\r\n            key={doctor.id}\r\n            className=\"selection-card\"\r\n            onClick={() => selectDoctor(doctor.id)}\r\n          >\r\n            {doctor.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorSelection;\r\n\r\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,EAAEC,WAAW,QAAQ,kBAAkB;AAC3D,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,OAAO,GAAG;EACd,CAAC,EAAE,CACD;IAAEC,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAc,CAAC,CAC/B;EACD,CAAC,EAAE,CACD;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAU,CAAC,CAC3B;EACD,CAAC,EAAE,CACD;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC,EAC5B;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAY,CAAC;AAEhC,CAAC;AAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAMU,MAAM,GAAG,IAAIC,eAAe,CAACF,QAAQ,CAACG,MAAM,CAAC;EACnD,MAAMC,UAAU,GAAGH,MAAM,CAACI,GAAG,CAAC,UAAU,CAAC;EAEzC,MAAMC,eAAe,GAAGZ,OAAO,CAACU,UAAU,CAAC,IAAI,EAAE;EAEjD,MAAMG,YAAY,GAAIZ,EAAE,IAAK;IAC3BI,QAAQ,CAAC,kBAAkBJ,EAAE,EAAE,CAAC;EAClC,CAAC;EAED,oBACEF,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClChB,OAAA;MAAAgB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBpB,OAAA;MAAKe,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5BH,eAAe,CAACQ,GAAG,CAAEC,MAAM,iBAC1BtB,OAAA;QAEEe,SAAS,EAAC,gBAAgB;QAC1BQ,OAAO,EAAEA,CAAA,KAAMT,YAAY,CAACQ,MAAM,CAACpB,EAAE,CAAE;QAAAc,QAAA,EAEtCM,MAAM,CAACnB;MAAI,GAJPmB,MAAM,CAACpB,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACf,EAAA,CA5BID,eAAe;EAAA,QACFP,WAAW,EACXC,WAAW;AAAA;AAAA0B,EAAA,GAFxBpB,eAAe;AA8BrB,eAAeA,eAAe;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}