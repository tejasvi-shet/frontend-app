{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\components\\\\UploadComponent.js\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadComponent = () => {\n  const handleUpload = async () => {\n    const canvas = document.getElementById(\"NoteItCanvas\");\n    if (!canvas) {\n      alert(\"Canvas not found!\");\n      return;\n    }\n    canvas.toBlob(async blob => {\n      if (!blob) {\n        alert(\"Failed to create image blob.\");\n        return;\n      }\n      try {\n        const formData = new FormData();\n        formData.append(\"file\", blob, \"drawing.png\");\n        const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        console.log(\"Upload Response:\", response.data);\n        alert(\"Drawing uploaded successfully!\");\n      } catch (error) {\n        console.error(\"Error uploading drawing:\", error);\n        alert(\"Failed to upload drawing.\");\n      }\n    }, \"image/png\"); // Specify PNG format\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleUpload,\n    children: \"Upload to Gallery\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n};\n_c = UploadComponent;\nexport default UploadComponent;\nvar _c;\n$RefreshReg$(_c, \"UploadComponent\");","map":{"version":3,"names":["axios","jsxDEV","_jsxDEV","UploadComponent","handleUpload","canvas","document","getElementById","alert","toBlob","blob","formData","FormData","append","response","post","headers","console","log","data","error","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/drawing-app/src/components/UploadComponent.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst UploadComponent = () => {\r\n  const handleUpload = async () => {\r\n    const canvas = document.getElementById(\"NoteItCanvas\");\r\n    if (!canvas) {\r\n      alert(\"Canvas not found!\");\r\n      return;\r\n    }\r\n\r\n    canvas.toBlob(async (blob) => {\r\n      if (!blob) {\r\n        alert(\"Failed to create image blob.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"file\", blob, \"drawing.png\");\r\n\r\n        const response = await axios.post(\"http://localhost:5000/api/upload\", formData, {\r\n          headers: { \"Content-Type\": \"multipart/form-data\" },\r\n        });\r\n\r\n        console.log(\"Upload Response:\", response.data);\r\n        alert(\"Drawing uploaded successfully!\");\r\n      } catch (error) {\r\n        console.error(\"Error uploading drawing:\", error);\r\n        alert(\"Failed to upload drawing.\");\r\n      }\r\n    }, \"image/png\"); // Specify PNG format\r\n  };\r\n\r\n  return <button onClick={handleUpload}>Upload to Gallery</button>;\r\n};\r\n\r\nexport default UploadComponent;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAC5B,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC;IACtD,IAAI,CAACF,MAAM,EAAE;MACXG,KAAK,CAAC,mBAAmB,CAAC;MAC1B;IACF;IAEAH,MAAM,CAACI,MAAM,CAAC,MAAOC,IAAI,IAAK;MAC5B,IAAI,CAACA,IAAI,EAAE;QACTF,KAAK,CAAC,8BAA8B,CAAC;QACrC;MACF;MAEA,IAAI;QACF,MAAMG,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;QAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,EAAE,aAAa,CAAC;QAE5C,MAAMI,QAAQ,GAAG,MAAMd,KAAK,CAACe,IAAI,CAAC,kCAAkC,EAAEJ,QAAQ,EAAE;UAC9EK,OAAO,EAAE;YAAE,cAAc,EAAE;UAAsB;QACnD,CAAC,CAAC;QAEFC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,QAAQ,CAACK,IAAI,CAAC;QAC9CX,KAAK,CAAC,gCAAgC,CAAC;MACzC,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdH,OAAO,CAACG,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;QAChDZ,KAAK,CAAC,2BAA2B,CAAC;MACpC;IACF,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;EACnB,CAAC;EAED,oBAAON,OAAA;IAAQmB,OAAO,EAAEjB,YAAa;IAAAkB,QAAA,EAAC;EAAiB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAClE,CAAC;AAACC,EAAA,GAhCIxB,eAAe;AAkCrB,eAAeA,eAAe;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}