{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\components\\\\Gallery.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gallery = () => {\n  _s();\n  const [gallery, setGallery] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        // Fetch images from your backend API (ensure the endpoint returns image URLs)\n        const response = await axios.get(\"http://localhost:5000/api/gallery\");\n        setGallery(response.data.images); // Assuming the API returns { images: [\"url1\", \"url2\", ...] }\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-grid\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n        gap: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: gallery.length > 0 ? gallery.map((image, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: `Drawing ${index + 1}`,\n        style: {\n          width: \"200px\",\n          height: \"200px\",\n          objectFit: \"cover\",\n          borderRadius: \"10px\",\n          boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\"\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(Gallery, \"IFYV229Q7wmpo8wsgYlhL0GNi3k=\");\n_c = Gallery;\nexport default Gallery;\nvar _c;\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","Gallery","_s","gallery","setGallery","fetchImages","response","get","data","images","error","console","className","style","textAlign","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","display","gridTemplateColumns","gap","marginTop","length","map","image","index","src","alt","width","height","objectFit","borderRadius","boxShadow","_c","$RefreshReg$"],"sources":["D:/drawing-app/src/components/Gallery.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Gallery = () => {\r\n  const [gallery, setGallery] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        // Fetch images from your backend API (ensure the endpoint returns image URLs)\r\n        const response = await axios.get(\"http://localhost:5000/api/gallery\");\r\n        setGallery(response.data.images); // Assuming the API returns { images: [\"url1\", \"url2\", ...] }\r\n      } catch (error) {\r\n        console.error(\"Error fetching images:\", error);\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"gallery-container\" style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h3>Gallery</h3>\r\n      <div className=\"gallery-grid\" style={{\r\n        display: \"grid\",\r\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\r\n        gap: \"10px\",\r\n        marginTop: \"20px\",\r\n      }}>\r\n        {gallery.length > 0 ? (\r\n          gallery.map((image, index) => (\r\n            <img\r\n              key={index}\r\n              src={image}\r\n              alt={`Drawing ${index + 1}`}\r\n              style={{\r\n                width: \"200px\",\r\n                height: \"200px\",\r\n                objectFit: \"cover\",\r\n                borderRadius: \"10px\",\r\n                boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n              }}\r\n            />\r\n          ))\r\n        ) : (\r\n          <p>No images found</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF;QACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,GAAG,CAAC,mCAAmC,CAAC;QACrEH,UAAU,CAACE,QAAQ,CAACE,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MACpC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDL,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAKY,SAAS,EAAC,mBAAmB;IAACC,KAAK,EAAE;MAAEC,SAAS,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACjFhB,OAAA;MAAAgB,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBpB,OAAA;MAAKY,SAAS,EAAC,cAAc;MAACC,KAAK,EAAE;QACnCQ,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,sCAAsC;QAC3DC,GAAG,EAAE,MAAM;QACXC,SAAS,EAAE;MACb,CAAE;MAAAR,QAAA,EACCb,OAAO,CAACsB,MAAM,GAAG,CAAC,GACjBtB,OAAO,CAACuB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBACvB5B,OAAA;QAEE6B,GAAG,EAAEF,KAAM;QACXG,GAAG,EAAE,WAAWF,KAAK,GAAG,CAAC,EAAG;QAC5Bf,KAAK,EAAE;UACLkB,KAAK,EAAE,OAAO;UACdC,MAAM,EAAE,OAAO;UACfC,SAAS,EAAE,OAAO;UAClBC,YAAY,EAAE,MAAM;UACpBC,SAAS,EAAE;QACb;MAAE,GATGP,KAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUX,CACF,CAAC,gBAEFpB,OAAA;QAAAgB,QAAA,EAAG;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACtB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA/CID,OAAO;AAAAmC,EAAA,GAAPnC,OAAO;AAiDb,eAAeA,OAAO;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}