{"ast":null,"code":"import React,{useState,useRef}from\"react\";import CanvasDraw from\"react-canvas-draw\";import\"./NoteItCanvas.css\";// Import the CSS file\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const NoteItCanvas=()=>{const[note,setNote]=useState(\"\");const canvasRef=useRef(null);const[color,setColor]=useState(\"#000\");// Default brush color: black\nconst[brushSize,setBrushSize]=useState(5);// Brush size control\nconst[isErasing,setIsErasing]=useState(false);// Eraser mode\n// Function to toggle between eraser and brush\nconst toggleEraser=()=>{if(isErasing){setColor(\"#000\");// Restore original color\n}else{setColor(\"#FFFFFF\");// White color for eraser effect\n}setIsErasing(!isErasing);};// Function to save the drawing as an image\nconst saveDrawing=()=>{if(!canvasRef.current)return;const canvas=canvasRef.current.canvasContainer.children[1];const dataUrl=canvas.toDataURL(\"image/png\");const link=document.createElement(\"a\");link.href=dataUrl;link.download=\"drawing.png\";// File name for the saved image\nlink.click();};return/*#__PURE__*/_jsxs(\"div\",{className:\"note-container\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"10\",value:brushSize,onChange:e=>setBrushSize(Number(e.target.value)),style:{marginBottom:\"10px\"}}),/*#__PURE__*/_jsx(\"input\",{type:\"color\",value:color,onChange:e=>{setColor(e.target.value);setIsErasing(false);// Disable eraser when changing color\n},style:{margin:\"10px\"}}),/*#__PURE__*/_jsx(CanvasDraw,{ref:canvasRef,brushColor:color,brushRadius:brushSize,lazyRadius:0,canvasWidth:Math.min(window.innerWidth*0.9,320)// Responsive width\n,canvasHeight:Math.min(window.innerHeight*0.4,280)// Responsive height\n,hideGrid:true,className:\"drawing-canvas\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"note-input\",placeholder:\"Write your note...\",value:note,onChange:e=>setNote(e.target.value)}),/*#__PURE__*/_jsxs(\"div\",{className:\"btn-group\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _canvasRef$current;return(_canvasRef$current=canvasRef.current)===null||_canvasRef$current===void 0?void 0:_canvasRef$current.clear();},children:\"Clear\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{var _canvasRef$current2;return(_canvasRef$current2=canvasRef.current)===null||_canvasRef$current2===void 0?void 0:_canvasRef$current2.undo();},children:\"Undo\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleEraser,children:isErasing?\"Use Brush\":\"Use Eraser\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveDrawing,children:\"Save Drawing\"}),\" \"]})]});};export default NoteItCanvas;","map":{"version":3,"names":["React","useState","useRef","CanvasDraw","jsx","_jsx","jsxs","_jsxs","NoteItCanvas","note","setNote","canvasRef","color","setColor","brushSize","setBrushSize","isErasing","setIsErasing","toggleEraser","saveDrawing","current","canvas","canvasContainer","children","dataUrl","toDataURL","link","document","createElement","href","download","click","className","type","min","max","value","onChange","e","Number","target","style","marginBottom","margin","ref","brushColor","brushRadius","lazyRadius","canvasWidth","Math","window","innerWidth","canvasHeight","innerHeight","hideGrid","placeholder","onClick","_canvasRef$current","clear","_canvasRef$current2","undo"],"sources":["D:/drawing-app/src/NoteItCanvas.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport \"./NoteItCanvas.css\"; // Import the CSS file\r\n\r\nconst NoteItCanvas = () => {\r\n  const [note, setNote] = useState(\"\");\r\n  const canvasRef = useRef(null);\r\n  const [color, setColor] = useState(\"#000\"); // Default brush color: black\r\n  const [brushSize, setBrushSize] = useState(5); // Brush size control\r\n  const [isErasing, setIsErasing] = useState(false); // Eraser mode\r\n\r\n  // Function to toggle between eraser and brush\r\n  const toggleEraser = () => {\r\n    if (isErasing) {\r\n      setColor(\"#000\"); // Restore original color\r\n    } else {\r\n      setColor(\"#FFFFFF\"); // White color for eraser effect\r\n    }\r\n    setIsErasing(!isErasing);\r\n  };\r\n\r\n  // Function to save the drawing as an image\r\n  const saveDrawing = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const dataUrl = canvas.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataUrl;\r\n    link.download = \"drawing.png\"; // File name for the saved image\r\n    link.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n      {/* Brush Size Selector */}\r\n      <input\r\n        type=\"range\"\r\n        min=\"1\"\r\n        max=\"10\"\r\n        value={brushSize}\r\n        onChange={(e) => setBrushSize(Number(e.target.value))}\r\n        style={{ marginBottom: \"10px\" }}\r\n      />\r\n\r\n      {/* Color Picker for brush color */}\r\n      <input\r\n        type=\"color\"\r\n        value={color}\r\n        onChange={(e) => {\r\n          setColor(e.target.value);\r\n          setIsErasing(false); // Disable eraser when changing color\r\n        }}\r\n        style={{ margin: \"10px\" }}\r\n      />\r\n\r\n      {/* Drawing Canvas */}\r\n      <CanvasDraw\r\n        ref={canvasRef}\r\n        brushColor={color}\r\n        brushRadius={brushSize}\r\n        lazyRadius={0}\r\n        canvasWidth={Math.min(window.innerWidth * 0.9, 320)} // Responsive width\r\n        canvasHeight={Math.min(window.innerHeight * 0.4, 280)} // Responsive height\r\n        hideGrid\r\n        className=\"drawing-canvas\"\r\n      />\r\n\r\n      {/* Text Input for Notes */}\r\n      <textarea\r\n        className=\"note-input\"\r\n        placeholder=\"Write your note...\"\r\n        value={note}\r\n        onChange={(e) => setNote(e.target.value)}\r\n      />\r\n\r\n      {/* Buttons */}\r\n      <div className=\"btn-group\">\r\n        <button onClick={() => canvasRef.current?.clear()}>Clear</button>\r\n        <button onClick={() => canvasRef.current?.undo()}>Undo</button>\r\n        <button onClick={toggleEraser}>\r\n          {isErasing ? \"Use Brush\" : \"Use Eraser\"}\r\n        </button>\r\n        <button onClick={saveDrawing}>Save Drawing</button> {/* Save button */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteItCanvas;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}