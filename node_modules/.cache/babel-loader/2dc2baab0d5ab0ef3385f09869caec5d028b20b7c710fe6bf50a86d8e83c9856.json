{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\components\\\\Gallery.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadButton = () => {\n  _s();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleUpload = () => {\n    // Open file selector dialog\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = 'image/*';\n    fileInput.onchange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        uploadFile(file);\n      }\n    };\n    fileInput.click();\n  };\n  const uploadFile = async file => {\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      console.log('Uploading image to backend...');\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload image');\n      }\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      alert('Image uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleUpload,\n    disabled: isUploading,\n    style: {\n      padding: '10px 20px',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: isUploading ? 'not-allowed' : 'pointer',\n      fontSize: '16px'\n    },\n    children: isUploading ? 'Uploading...' : 'Upload Image'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadButton, \"iM8/aiMEO5Xrk8fXFL7kjRs1wVs=\");\n_c = UploadButton;\nconst Gallery = () => {\n  _s2();\n  const [gallery, setGallery] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        // Fetch images from your backend\n        const response = await axios.get(\"http://localhost:5000/api/gallery\");\n        console.log(\"API Response:\", response.data); // Log the response to see its structure\n\n        // Check for different possible response structures\n        if (Array.isArray(response.data)) {\n          setGallery(response.data); // Case where the response itself is an array\n        } else if (response.data && Array.isArray(response.data.images)) {\n          setGallery(response.data.images); // Case where images are inside a nested \"images\" array\n        } else {\n          throw new Error(\"Unexpected response format\");\n        }\n      } catch (error) {\n        console.error(\"Error fetching images:\", error);\n        setError(\"Failed to load images\");\n      } finally {\n        setLoading(false); // Stop loading regardless of success or failure\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gallery-container\",\n    style: {\n      textAlign: \"center\",\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: \"Gallery\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading images...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this) : gallery.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gallery-grid\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\n        gap: \"15px\",\n        marginTop: \"20px\"\n      },\n      children: gallery.map((image, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: \"relative\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: image.imageUrl || image.url // Check for both possible properties\n          ,\n          alt: `Drawing ${index + 1}`,\n          style: {\n            width: \"200px\",\n            height: \"200px\",\n            objectFit: \"cover\",\n            borderRadius: \"10px\",\n            boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No images found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s2(Gallery, \"TXfVlLTlcC0aFQu8AUZGqMOlxgk=\");\n_c2 = Gallery;\nexport default Gallery;\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadButton\");\n$RefreshReg$(_c2, \"Gallery\");","map":{"version":3,"names":["useEffect","useState","axios","jsxDEV","_jsxDEV","UploadButton","_s","isUploading","setIsUploading","handleUpload","fileInput","document","createElement","type","accept","onchange","event","file","target","files","uploadFile","click","formData","FormData","append","console","log","response","fetch","method","body","ok","Error","result","json","alert","error","onClick","disabled","style","padding","backgroundColor","color","border","borderRadius","cursor","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Gallery","_s2","gallery","setGallery","loading","setLoading","setError","fetchImages","get","data","Array","isArray","images","className","textAlign","marginBottom","length","display","gridTemplateColumns","gap","marginTop","map","image","index","position","src","imageUrl","url","alt","width","height","objectFit","boxShadow","_c2","$RefreshReg$"],"sources":["D:/drawing-app/src/components/Gallery.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst UploadButton = () => {\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  const handleUpload = () => {\r\n    // Open file selector dialog\r\n    const fileInput = document.createElement('input');\r\n    fileInput.type = 'file';\r\n    fileInput.accept = 'image/*';\r\n    fileInput.onchange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        uploadFile(file);\r\n      }\r\n    };\r\n    fileInput.click();\r\n  };\r\n  \r\n  const uploadFile = async (file) => {\r\n    setIsUploading(true);\r\n    \r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    \r\n    try {\r\n      console.log('Uploading image to backend...');\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload image');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Upload successful:', result);\r\n      alert('Image uploaded successfully!');\r\n      \r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      alert('Failed to upload image');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      onClick={handleUpload}\r\n      disabled={isUploading}\r\n      style={{ \r\n        padding: '10px 20px', \r\n        backgroundColor: '#4CAF50', \r\n        color: 'white', \r\n        border: 'none', \r\n        borderRadius: '4px', \r\n        cursor: isUploading ? 'not-allowed' : 'pointer',\r\n        fontSize: '16px'\r\n      }}\r\n    >\r\n      {isUploading ? 'Uploading...' : 'Upload Image'}\r\n    </button>\r\n  );\r\n};\r\nconst Gallery = () => {\r\n  const [gallery, setGallery] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchImages = async () => {\r\n      try {\r\n        // Fetch images from your backend\r\n        const response = await axios.get(\"http://localhost:5000/api/gallery\");\r\n        console.log(\"API Response:\", response.data); // Log the response to see its structure\r\n        \r\n        // Check for different possible response structures\r\n        if (Array.isArray(response.data)) {\r\n          setGallery(response.data); // Case where the response itself is an array\r\n        } else if (response.data && Array.isArray(response.data.images)) {\r\n          setGallery(response.data.images); // Case where images are inside a nested \"images\" array\r\n        } else {\r\n          throw new Error(\"Unexpected response format\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error fetching images:\", error);\r\n        setError(\"Failed to load images\");\r\n      } finally {\r\n        setLoading(false); // Stop loading regardless of success or failure\r\n      }\r\n    };\r\n\r\n    fetchImages();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"gallery-container\" style={{ textAlign: \"center\", padding: \"20px\" }}>\r\n      <h3 style={{ marginBottom: \"20px\" }}>Gallery</h3>\r\n      {loading ? (\r\n        <p>Loading images...</p>\r\n      ) : error ? (\r\n        <p>{error}</p>\r\n      ) : gallery.length > 0 ? (\r\n        <div\r\n          className=\"gallery-grid\"\r\n          style={{\r\n            display: \"grid\",\r\n            gridTemplateColumns: \"repeat(auto-fit, minmax(200px, 1fr))\",\r\n            gap: \"15px\",\r\n            marginTop: \"20px\",\r\n          }}\r\n        >\r\n          {gallery.map((image, index) => (\r\n            <div key={index} style={{ position: \"relative\" }}>\r\n              <img\r\n                src={image.imageUrl || image.url} // Check for both possible properties\r\n                alt={`Drawing ${index + 1}`}\r\n                style={{\r\n                  width: \"200px\",\r\n                  height: \"200px\",\r\n                  objectFit: \"cover\",\r\n                  borderRadius: \"10px\",\r\n                  boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n                }}\r\n              />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <p>No images found</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gallery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}