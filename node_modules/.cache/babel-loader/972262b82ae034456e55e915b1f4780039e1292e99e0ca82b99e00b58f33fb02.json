{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\NoteItCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport \"./NoteItCanvas.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteItCanvas = () => {\n  _s();\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState(\"#000\");\n  const [brushSize, setBrushSize] = useState(5);\n  const [isErasing, setIsErasing] = useState(false);\n  const toggleEraser = () => {\n    setColor(isErasing ? \"#000\" : \"#FFFFFF\");\n    setIsErasing(!isErasing);\n  };\n  const saveDrawing = () => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const dataUrl = canvas.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = dataUrl;\n    link.download = \"drawing.png\";\n    link.click();\n  };\n  const handleUpload = () => {\n    const canvas = document.querySelector(\"canvas\");\n    if (!canvas) {\n      alert(\"Canvas not found!\");\n      return;\n    }\n    const imageData = canvas.toDataURL();\n    let savedImages = JSON.parse(localStorage.getItem(\"galleryImages\")) || [];\n    savedImages.push(imageData);\n    localStorage.setItem(\"galleryImages\", JSON.stringify(savedImages));\n    alert(\"Image uploaded to gallery!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleEraser,\n        children: isErasing ? \"Use Brush\" : \"Use Eraser\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"color\",\n        value: color,\n        onChange: e => setColor(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: brushSize,\n        onChange: e => setBrushSize(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveDrawing,\n        children: \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpload,\n        children: \"Upload to Gallery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CanvasDraw, {\n      ref: canvasRef,\n      brushColor: color,\n      brushRadius: brushSize,\n      lazyRadius: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteItCanvas, \"A1f6YxY5Khx+gRA5uPLhH0D+xpY=\");\n_c = NoteItCanvas;\nexport default NoteItCanvas;\nvar _c;\n$RefreshReg$(_c, \"NoteItCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CanvasDraw","jsxDEV","_jsxDEV","NoteItCanvas","_s","canvasRef","color","setColor","brushSize","setBrushSize","isErasing","setIsErasing","toggleEraser","saveDrawing","current","canvas","canvasContainer","children","dataUrl","toDataURL","link","document","createElement","href","download","click","handleUpload","querySelector","alert","imageData","savedImages","JSON","parse","localStorage","getItem","push","setItem","stringify","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","min","max","Number","ref","brushColor","brushRadius","lazyRadius","_c","$RefreshReg$"],"sources":["D:/drawing-app/src/NoteItCanvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport \"./NoteItCanvas.css\";\r\n\r\nconst NoteItCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n  const [color, setColor] = useState(\"#000\");\r\n  const [brushSize, setBrushSize] = useState(5);\r\n  const [isErasing, setIsErasing] = useState(false);\r\n\r\n  const toggleEraser = () => {\r\n    setColor(isErasing ? \"#000\" : \"#FFFFFF\");\r\n    setIsErasing(!isErasing);\r\n  };\r\n\r\n  const saveDrawing = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const dataUrl = canvas.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataUrl;\r\n    link.download = \"drawing.png\";\r\n    link.click();\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    const canvas = document.querySelector(\"canvas\");\r\n    if (!canvas) {\r\n        alert(\"Canvas not found!\");\r\n        return;\r\n    }\r\n\r\n    const imageData = canvas.toDataURL();\r\n    let savedImages = JSON.parse(localStorage.getItem(\"galleryImages\")) || [];\r\n    savedImages.push(imageData);\r\n    localStorage.setItem(\"galleryImages\", JSON.stringify(savedImages));\r\n\r\n    alert(\"Image uploaded to gallery!\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n      <div className=\"controls\">\r\n        <button onClick={toggleEraser}>{isErasing ? \"Use Brush\" : \"Use Eraser\"}</button>\r\n        <input type=\"color\" value={color} onChange={(e) => setColor(e.target.value)} />\r\n        <input type=\"range\" min=\"1\" max=\"10\" value={brushSize} onChange={(e) => setBrushSize(Number(e.target.value))} />\r\n        <button onClick={saveDrawing}>Save</button>\r\n        <button onClick={handleUpload}>Upload to Gallery</button>\r\n      </div>\r\n      <CanvasDraw ref={canvasRef} brushColor={color} brushRadius={brushSize} lazyRadius={0} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteItCanvas;\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}