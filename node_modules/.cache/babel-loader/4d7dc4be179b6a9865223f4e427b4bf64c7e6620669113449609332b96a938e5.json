{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\NoteItCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport CanvasDraw from \"react-canvas-draw\";\nimport \"./NoteItCanvas.css\"; // Import the CSS file\nimport { Button } from \"@/components/ui/button\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteItCanvas = () => {\n  _s();\n  const [note, setNote] = useState(\"\");\n  const canvasRef = useRef(null);\n  const [color, setColor] = useState(\"#000\"); // Default brush color: black\n  const [brushSize, setBrushSize] = useState(5); // Brush size control\n  const [isErasing, setIsErasing] = useState(false); // Eraser mode\n  const [tool, setTool] = useState(\"brush\"); // Current tool: brush, rectangle, circle, triangle\n  const [shapes, setShapes] = useState([]); // Store drawn shapes\n  const [dragging, setDragging] = useState(false); // Is a shape being dragged?\n  const [draggedShapeIndex, setDraggedShapeIndex] = useState(null); // Which shape is being dragged?\n  const [offset, setOffset] = useState({\n    x: 0,\n    y: 0\n  }); // Offset for drag start\n  const [toolActive, setToolActive] = useState(false); // Track if the tool is active\n\n  // Function to resize the canvas to fit its container\n  const resizeCanvas = () => {\n    if (canvasRef.current) {\n      const container = canvasRef.current.canvasContainer;\n      const canvas = container.querySelector(\"canvas\");\n      if (canvas) {\n        // Set the canvas dimensions to match the container\n        canvas.width = container.offsetWidth;\n        canvas.height = container.offsetHeight;\n      }\n    }\n  };\n\n  // Resize the canvas on component mount and window resize\n  useEffect(() => {\n    resizeCanvas();\n    window.addEventListener(\"resize\", resizeCanvas);\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\n  }, []);\n\n  // Brush Icon Component\n  const BrushIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    className: \"w-6 h-6 text-gray-800 dark:text-white\",\n    \"aria-hidden\": \"true\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"30\",\n    height: \"55\",\n    fill: \"currentColor\",\n    viewBox: \"0 0 24 24\",\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      fillRule: \"evenodd\",\n      d: \"M14 4.182A4.136 4.136 0 0 1 16.9 3c1.087 0 2.13.425 2.899 1.182A4.01 4.01 0 0 1 21 7.037c0 1.068-.43 2.092-1.194 2.849L18.5 11.214l-5.8-5.71 1.287-1.31.012-.012Zm-2.717 2.763L6.186 12.13l2.175 2.141 5.063-5.218-2.141-2.108Zm-6.25 6.886-1.98 5.849a.992.992 0 0 0 .245 1.026 1.03 1.03 0 0 0 1.043.242L10.282 19l-5.25-5.168Zm6.954 4.01 5.096-5.186-2.218-2.183-5.063 5.218 2.185 2.15Z\",\n      clipRule: \"evenodd\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n\n  // Function to toggle between eraser and brush\n  const toggleEraser = () => {\n    if (isErasing) {\n      setColor(\"#000\"); // Restore original color\n    } else {\n      setColor(\"#FFFFFF\"); // White color for eraser effect\n    }\n    setIsErasing(!isErasing);\n  };\n\n  // Function to save the drawing as an image\n  const saveDrawing = () => {\n    if (!canvasRef.current) return;\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const dataUrl = canvas.toDataURL(\"image/png\");\n    const link = document.createElement(\"a\");\n    link.href = dataUrl;\n    link.download = \"drawing.png\"; // File name for the saved image\n    link.click();\n  };\n\n  // Function to draw a shape at the clicked position\n  const drawShape = e => {\n    if (tool === \"brush\" || dragging || !toolActive) return; // Do nothing if brush tool is selected, dragging, or tool is inactive\n\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const newShape = {\n      type: tool,\n      x,\n      y,\n      width: 100,\n      // Fixed width for rectangle/triangle/square/oval/diamond\n      height: tool === \"square\" || tool === \"diamond\" ? 100 : 70,\n      // Fixed height for square, diamond; different height for oval\n      radiusX: tool === \"oval\" ? 100 : 50,\n      // For oval, radiusX is different from radiusY\n      radiusY: tool === \"oval\" ? 70 : 50,\n      // For oval, radiusY is different from radiusX\n      fillColor: \"#ffffff\" // Store fill color for shapes (set to white by default)\n    };\n    setShapes([...shapes, newShape]);\n    setToolActive(false); // Deactivate the tool after drawing a shape\n  };\n\n  // Function to handle mouse down event for dragging\n  const handleMouseDown = e => {\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Check if a shape is clicked\n    const clickedShapeIndex = shapes.findIndex(shape => {\n      if (shape.type === \"rectangle\" || shape.type === \"square\" || shape.type === \"diamond\") {\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n      } else if (shape.type === \"circle\" || shape.type === \"oval\") {\n        const dx = x - shape.x;\n        const dy = y - shape.y;\n        return dx * dx / (shape.radiusX * shape.radiusX) + dy * dy / (shape.radiusY * shape.radiusY) <= 1;\n      } else if (shape.type === \"triangle\") {\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\n      }\n      return false;\n    });\n    if (clickedShapeIndex !== -1) {\n      // If a shape is clicked, start dragging\n      setDragging(true);\n      setDraggedShapeIndex(clickedShapeIndex);\n      setOffset({\n        x: x - shapes[clickedShapeIndex].x,\n        y: y - shapes[clickedShapeIndex].y\n      });\n\n      // Temporarily disable brush drawing by setting brushRadius to 0\n      canvasRef.current.brushRadius = 0;\n    }\n  };\n\n  // Function to handle mouse move event for dragging\n  const handleMouseMove = e => {\n    if (!dragging || draggedShapeIndex === null) return;\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const rect = canvas.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n\n    // Update the position of the dragged shape\n    const updatedShapes = [...shapes];\n    updatedShapes[draggedShapeIndex] = {\n      ...updatedShapes[draggedShapeIndex],\n      x: x - offset.x,\n      y: y - offset.y\n    };\n    setShapes(updatedShapes);\n  };\n\n  // Function to handle mouse up event for dragging\n  const handleMouseUp = () => {\n    if (dragging) {\n      setDragging(false);\n      setDraggedShapeIndex(null);\n\n      // Re-enable brush drawing after dragging\n      canvasRef.current.brushRadius = brushSize;\n    }\n  };\n\n  // Function to draw all shapes on the canvas\n  const drawAllShapes = () => {\n    const canvas = canvasRef.current.canvasContainer.children[1];\n    const ctx = canvas.getContext(\"2d\");\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\n\n    shapes.forEach(shape => {\n      ctx.strokeStyle = color;\n      ctx.lineWidth = brushSize;\n\n      // Apply fill color to shapes\n      ctx.fillStyle = shape.fillColor;\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\n        ctx.fillRect(shape.x, shape.y, shape.width, shape.height);\n        ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\n      } else if (shape.type === \"diamond\") {\n        ctx.beginPath();\n        ctx.moveTo(shape.x, shape.y - shape.height / 2); // Top\n        ctx.lineTo(shape.x - shape.width / 2, shape.y); // Left\n        ctx.lineTo(shape.x, shape.y + shape.height / 2); // Bottom\n        ctx.lineTo(shape.x + shape.width / 2, shape.y); // Right\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"circle\") {\n        ctx.beginPath();\n        ctx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"oval\") {\n        ctx.beginPath();\n        ctx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n      } else if (shape.type === \"triangle\") {\n        ctx.beginPath();\n        ctx.moveTo(shape.x, shape.y);\n        ctx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\n        ctx.lineTo(shape.x + shape.width, shape.y);\n        ctx.closePath();\n        ctx.fill();\n        ctx.stroke();\n      }\n    });\n  };\n\n  // Re-render all shapes whenever the shapes state changes\n  useEffect(() => {\n    drawAllShapes();\n  }, [shapes]);\n\n  // Function to handle tool selection\n  const handleToolChange = newTool => {\n    setTool(newTool);\n    setToolActive(true); // Activate the tool when selected\n  };\n\n  // Function to undo the last action\n  const undoShape = () => {\n    if (shapes.length > 0) {\n      // If there are shapes, remove the last one\n      setShapes(prevShapes => prevShapes.slice(0, -1));\n    } else {\n      var _canvasRef$current;\n      // If no shapes, undo the last freehand drawing\n      (_canvasRef$current = canvasRef.current) === null || _canvasRef$current === void 0 ? void 0 : _canvasRef$current.undo();\n    }\n  };\n\n  // SVG Icons for Shapes\n  const RectangleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"2\",\n      y: \"2\",\n      width: \"20\",\n      height: \"20\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n  const SquareIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"rect\", {\n      x: \"2\",\n      y: \"2\",\n      width: \"20\",\n      height: \"20\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 5\n  }, this);\n  const CircleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"circle\", {\n      cx: \"12\",\n      cy: \"12\",\n      r: \"10\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n  const TriangleIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n      points: \"12,2 22,22 2,22\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n  const DiamondIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n      points: \"12,2 22,12 12,22 2,12\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n  const OvalIcon = () => /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: \"30\",\n    height: \"30\",\n    viewBox: \"0 0 24 24\",\n    fill: \"currentColor\",\n    children: /*#__PURE__*/_jsxDEV(\"ellipse\", {\n      cx: \"12\",\n      cy: \"12\",\n      rx: \"10\",\n      ry: \"6\",\n      stroke: \"currentColor\",\n      strokeWidth: \"2\",\n      fill: \"none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 272,\n    columnNumber: 5\n  }, this);\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Tools\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"brush\"),\n              className: tool === \"brush\" ? \"active-tool\" : \"\",\n              children: [/*#__PURE__*/_jsxDEV(BrushIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: toggleEraser,\n              children: isErasing ? \"Use Brush\" : \"Use Eraser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Colour\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"color\",\n            value: color,\n            onChange: e => {\n              setColor(e.target.value);\n              setIsErasing(false); // Disable eraser when changing color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"range\",\n            min: \"1\",\n            max: \"10\",\n            value: brushSize,\n            onChange: e => setBrushSize(Number(e.target.value))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Shapes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shape-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"rectangle\"),\n              className: tool === \"rectangle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(RectangleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 329,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"square\"),\n              className: tool === \"square\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(SquareIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"circle\"),\n              className: tool === \"circle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(CircleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"shape-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"triangle\"),\n              className: tool === \"triangle\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(TriangleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 351,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"diamond\"),\n              className: tool === \"diamond\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(DiamondIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 357,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleToolChange(\"oval\"),\n              className: tool === \"oval\" ? \"active-tool\" : \"\",\n              children: /*#__PURE__*/_jsxDEV(OvalIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              var _canvasRef$current2;\n              return (_canvasRef$current2 = canvasRef.current) === null || _canvasRef$current2 === void 0 ? void 0 : _canvasRef$current2.clear();\n            },\n            children: \"Clear\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 371,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: undoShape,\n            children: \"Undo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: drawShape,\n        onMouseDown: handleMouseDown,\n        onMouseMove: handleMouseMove,\n        onMouseUp: handleMouseUp,\n        style: {\n          width: \"100%\",\n          height: \"500px\",\n          position: \"relative\",\n          border: \"1px solid #ccc\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CanvasDraw, {\n          ref: canvasRef,\n          brushColor: color,\n          brushRadius: tool === \"brush\" ? brushSize : 0 // Disable brush for shapes\n          ,\n          lazyRadius: 0,\n          canvasWidth: 800 // Fixed canvas width\n          ,\n          canvasHeight: 500 // Fixed canvas height\n          ,\n          hideGrid: true,\n          className: \"drawing-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"note-input\",\n        placeholder: \"Write your note...\",\n        value: note,\n        onChange: e => setNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute right-4 bottom-4\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => navigate('/gallery'),\n          className: \"bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-lg px-4 py-2 shadow-lg\",\n          children: \"Go to Gallery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 410,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn-group\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveDrawing,\n          children: \"Save Drawing\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteItCanvas, \"0OztzpW3XgHerA5b2W+MRQf9P7I=\", false, function () {\n  return [useNavigate];\n});\n_c = NoteItCanvas;\nexport default NoteItCanvas;\nvar _c;\n$RefreshReg$(_c, \"NoteItCanvas\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CanvasDraw","Button","useNavigate","jsxDEV","_jsxDEV","NoteItCanvas","_s","note","setNote","canvasRef","color","setColor","brushSize","setBrushSize","isErasing","setIsErasing","tool","setTool","shapes","setShapes","dragging","setDragging","draggedShapeIndex","setDraggedShapeIndex","offset","setOffset","x","y","toolActive","setToolActive","resizeCanvas","current","container","canvasContainer","canvas","querySelector","width","offsetWidth","height","offsetHeight","window","addEventListener","removeEventListener","BrushIcon","className","xmlns","fill","viewBox","children","fillRule","d","clipRule","fileName","_jsxFileName","lineNumber","columnNumber","toggleEraser","saveDrawing","dataUrl","toDataURL","link","document","createElement","href","download","click","drawShape","e","rect","getBoundingClientRect","clientX","left","clientY","top","newShape","type","radiusX","radiusY","fillColor","handleMouseDown","clickedShapeIndex","findIndex","shape","dx","dy","brushRadius","handleMouseMove","updatedShapes","handleMouseUp","drawAllShapes","ctx","getContext","clearRect","forEach","strokeStyle","lineWidth","fillStyle","fillRect","strokeRect","beginPath","moveTo","lineTo","closePath","stroke","arc","Math","PI","ellipse","handleToolChange","newTool","undoShape","length","prevShapes","slice","_canvasRef$current","undo","RectangleIcon","strokeWidth","SquareIcon","CircleIcon","cx","cy","r","TriangleIcon","points","DiamondIcon","OvalIcon","rx","ry","navigate","onClick","value","onChange","target","min","max","Number","_canvasRef$current2","clear","onMouseDown","onMouseMove","onMouseUp","style","position","border","ref","brushColor","lazyRadius","canvasWidth","canvasHeight","hideGrid","placeholder","_c","$RefreshReg$"],"sources":["D:/drawing-app/src/NoteItCanvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport CanvasDraw from \"react-canvas-draw\";\r\nimport \"./NoteItCanvas.css\"; // Import the CSS file\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NoteItCanvas = () => {\r\n  const [note, setNote] = useState(\"\");\r\n  const canvasRef = useRef(null);\r\n  const [color, setColor] = useState(\"#000\"); // Default brush color: black\r\n  const [brushSize, setBrushSize] = useState(5); // Brush size control\r\n  const [isErasing, setIsErasing] = useState(false); // Eraser mode\r\n  const [tool, setTool] = useState(\"brush\"); // Current tool: brush, rectangle, circle, triangle\r\n  const [shapes, setShapes] = useState([]); // Store drawn shapes\r\n  const [dragging, setDragging] = useState(false); // Is a shape being dragged?\r\n  const [draggedShapeIndex, setDraggedShapeIndex] = useState(null); // Which shape is being dragged?\r\n  const [offset, setOffset] = useState({ x: 0, y: 0 }); // Offset for drag start\r\n  const [toolActive, setToolActive] = useState(false); // Track if the tool is active\r\n\r\n  // Function to resize the canvas to fit its container\r\n  const resizeCanvas = () => {\r\n    if (canvasRef.current) {\r\n      const container = canvasRef.current.canvasContainer;\r\n      const canvas = container.querySelector(\"canvas\");\r\n\r\n      if (canvas) {\r\n        // Set the canvas dimensions to match the container\r\n        canvas.width = container.offsetWidth;\r\n        canvas.height = container.offsetHeight;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Resize the canvas on component mount and window resize\r\n  useEffect(() => {\r\n    resizeCanvas();\r\n    window.addEventListener(\"resize\", resizeCanvas);\r\n    return () => window.removeEventListener(\"resize\", resizeCanvas);\r\n  }, []);\r\n\r\n  // Brush Icon Component\r\n  const BrushIcon = () => (\r\n    <svg\r\n      className=\"w-6 h-6 text-gray-800 dark:text-white\"\r\n      aria-hidden=\"true\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"30\"\r\n      height=\"55\"\r\n      fill=\"currentColor\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path\r\n        fillRule=\"evenodd\"\r\n        d=\"M14 4.182A4.136 4.136 0 0 1 16.9 3c1.087 0 2.13.425 2.899 1.182A4.01 4.01 0 0 1 21 7.037c0 1.068-.43 2.092-1.194 2.849L18.5 11.214l-5.8-5.71 1.287-1.31.012-.012Zm-2.717 2.763L6.186 12.13l2.175 2.141 5.063-5.218-2.141-2.108Zm-6.25 6.886-1.98 5.849a.992.992 0 0 0 .245 1.026 1.03 1.03 0 0 0 1.043.242L10.282 19l-5.25-5.168Zm6.954 4.01 5.096-5.186-2.218-2.183-5.063 5.218 2.185 2.15Z\"\r\n        clipRule=\"evenodd\"\r\n      />\r\n    </svg>\r\n  );\r\n\r\n  // Function to toggle between eraser and brush\r\n  const toggleEraser = () => {\r\n    if (isErasing) {\r\n      setColor(\"#000\"); // Restore original color\r\n    } else {\r\n      setColor(\"#FFFFFF\"); // White color for eraser effect\r\n    }\r\n    setIsErasing(!isErasing);\r\n  };\r\n\r\n  // Function to save the drawing as an image\r\n  const saveDrawing = () => {\r\n    if (!canvasRef.current) return;\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const dataUrl = canvas.toDataURL(\"image/png\");\r\n    const link = document.createElement(\"a\");\r\n    link.href = dataUrl;\r\n    link.download = \"drawing.png\"; // File name for the saved image\r\n    link.click();\r\n  };\r\n\r\n\r\n  // Function to draw a shape at the clicked position\r\n  const drawShape = (e) => {\r\n    if (tool === \"brush\" || dragging || !toolActive) return; // Do nothing if brush tool is selected, dragging, or tool is inactive\r\n\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    const newShape = {\r\n      type: tool,\r\n      x,\r\n      y,\r\n      width: 100, // Fixed width for rectangle/triangle/square/oval/diamond\r\n      height: tool === \"square\" || tool === \"diamond\" ? 100 : 70, // Fixed height for square, diamond; different height for oval\r\n      radiusX: tool === \"oval\" ? 100 : 50, // For oval, radiusX is different from radiusY\r\n      radiusY: tool === \"oval\" ? 70 : 50, // For oval, radiusY is different from radiusX\r\n      fillColor: \"#ffffff\", // Store fill color for shapes (set to white by default)\r\n    };\r\n\r\n    setShapes([...shapes, newShape]);\r\n    setToolActive(false); // Deactivate the tool after drawing a shape\r\n  };\r\n\r\n  // Function to handle mouse down event for dragging\r\n  const handleMouseDown = (e) => {\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    // Check if a shape is clicked\r\n    const clickedShapeIndex = shapes.findIndex((shape) => {\r\n      if (shape.type === \"rectangle\" || shape.type === \"square\" || shape.type === \"diamond\") {\r\n        return x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height;\r\n      } else if (shape.type === \"circle\" || shape.type === \"oval\") {\r\n        const dx = x - shape.x;\r\n        const dy = y - shape.y;\r\n        return (dx * dx) / (shape.radiusX * shape.radiusX) + (dy * dy) / (shape.radiusY * shape.radiusY) <= 1;\r\n      } else if (shape.type === \"triangle\") {\r\n        return (\r\n          x >= shape.x && x <= shape.x + shape.width && y >= shape.y && y <= shape.y + shape.height\r\n        );\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (clickedShapeIndex !== -1) {\r\n      // If a shape is clicked, start dragging\r\n      setDragging(true);\r\n      setDraggedShapeIndex(clickedShapeIndex);\r\n      setOffset({ x: x - shapes[clickedShapeIndex].x, y: y - shapes[clickedShapeIndex].y });\r\n\r\n      // Temporarily disable brush drawing by setting brushRadius to 0\r\n      canvasRef.current.brushRadius = 0;\r\n    }\r\n  };\r\n\r\n  // Function to handle mouse move event for dragging\r\n  const handleMouseMove = (e) => {\r\n    if (!dragging || draggedShapeIndex === null) return;\r\n\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const rect = canvas.getBoundingClientRect();\r\n    const x = e.clientX - rect.left;\r\n    const y = e.clientY - rect.top;\r\n\r\n    // Update the position of the dragged shape\r\n    const updatedShapes = [...shapes];\r\n    updatedShapes[draggedShapeIndex] = {\r\n      ...updatedShapes[draggedShapeIndex],\r\n      x: x - offset.x,\r\n      y: y - offset.y,\r\n    };\r\n\r\n    setShapes(updatedShapes);\r\n  };\r\n\r\n  // Function to handle mouse up event for dragging\r\n  const handleMouseUp = () => {\r\n    if (dragging) {\r\n      setDragging(false);\r\n      setDraggedShapeIndex(null);\r\n\r\n      // Re-enable brush drawing after dragging\r\n      canvasRef.current.brushRadius = brushSize;\r\n    }\r\n  };\r\n\r\n  // Function to draw all shapes on the canvas\r\n  const drawAllShapes = () => {\r\n    const canvas = canvasRef.current.canvasContainer.children[1];\r\n    const ctx = canvas.getContext(\"2d\");\r\n    ctx.clearRect(0, 0, canvas.width, canvas.height); // Clear the canvas\r\n\r\n    shapes.forEach((shape) => {\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth = brushSize;\r\n\r\n      // Apply fill color to shapes\r\n      ctx.fillStyle = shape.fillColor;\r\n\r\n      if (shape.type === \"rectangle\" || shape.type === \"square\") {\r\n        ctx.fillRect(shape.x, shape.y, shape.width, shape.height);\r\n        ctx.strokeRect(shape.x, shape.y, shape.width, shape.height);\r\n      } else if (shape.type === \"diamond\") {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y - shape.height / 2); // Top\r\n        ctx.lineTo(shape.x - shape.width / 2, shape.y); // Left\r\n        ctx.lineTo(shape.x, shape.y + shape.height / 2); // Bottom\r\n        ctx.lineTo(shape.x + shape.width / 2, shape.y); // Right\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"circle\") {\r\n        ctx.beginPath();\r\n        ctx.arc(shape.x, shape.y, shape.radiusX, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"oval\") {\r\n        ctx.beginPath();\r\n        ctx.ellipse(shape.x, shape.y, shape.radiusX, shape.radiusY, 0, 0, 2 * Math.PI);\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      } else if (shape.type === \"triangle\") {\r\n        ctx.beginPath();\r\n        ctx.moveTo(shape.x, shape.y);\r\n        ctx.lineTo(shape.x + shape.width / 2, shape.y - shape.height);\r\n        ctx.lineTo(shape.x + shape.width, shape.y);\r\n        ctx.closePath();\r\n        ctx.fill();\r\n        ctx.stroke();\r\n      }\r\n    });\r\n  };\r\n\r\n  // Re-render all shapes whenever the shapes state changes\r\n  useEffect(() => {\r\n    drawAllShapes();\r\n  }, [shapes]);\r\n\r\n  // Function to handle tool selection\r\n  const handleToolChange = (newTool) => {\r\n    setTool(newTool);\r\n    setToolActive(true); // Activate the tool when selected\r\n  };\r\n\r\n  // Function to undo the last action\r\n  const undoShape = () => {\r\n    if (shapes.length > 0) {\r\n      // If there are shapes, remove the last one\r\n      setShapes((prevShapes) => prevShapes.slice(0, -1));\r\n    } else {\r\n      // If no shapes, undo the last freehand drawing\r\n      canvasRef.current?.undo();\r\n    }\r\n  };\r\n\r\n  // SVG Icons for Shapes\r\n  const RectangleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const SquareIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <rect x=\"2\" y=\"2\" width=\"20\" height=\"20\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const CircleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const TriangleIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <polygon points=\"12,2 22,22 2,22\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const DiamondIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <polygon points=\"12,2 22,12 12,22 2,12\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\n\r\n  const OvalIcon = () => (\r\n    <svg width=\"30\" height=\"30\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\r\n      <ellipse cx=\"12\" cy=\"12\" rx=\"10\" ry=\"6\" stroke=\"currentColor\" strokeWidth=\"2\" fill=\"none\" />\r\n    </svg>\r\n  );\r\nconst navigate = useNavigate();\r\n\r\n  return (\r\n    <div className=\"note-container\">\r\n      {/* Main Box with Border */}\r\n      <div className=\"main-box\">\r\n        {/* Top Section: Grid with 4 columns */}\r\n        <div className=\"top-section\">\r\n          {/* Column 1: Tools */}\r\n          <div className=\"column\">\r\n            <h3>Tools</h3>\r\n            <div className=\"button-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"brush\")}\r\n                className={tool === \"brush\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <BrushIcon /> {/* Use the BrushIcon here */}\r\n              </button>\r\n              <button onClick={toggleEraser}>\r\n                {isErasing ? \"Use Brush\" : \"Use Eraser\"}\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Column 2: Colour */}\r\n          <div className=\"column\">\r\n            <h3>Colour</h3>\r\n            <input\r\n              type=\"color\"\r\n              value={color}\r\n              onChange={(e) => {\r\n                setColor(e.target.value);\r\n                setIsErasing(false); // Disable eraser when changing color\r\n              }}\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              min=\"1\"\r\n              max=\"10\"\r\n              value={brushSize}\r\n              onChange={(e) => setBrushSize(Number(e.target.value))}\r\n            />\r\n          </div>\r\n\r\n          {/* Column 3: Shapes */}\r\n          <div className=\"column\">\r\n            <h3>Shapes</h3>\r\n            {/* Row 1: Rectangle, Square, Circle */}\r\n            <div className=\"shape-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"rectangle\")}\r\n                className={tool === \"rectangle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <RectangleIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"square\")}\r\n                className={tool === \"square\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <SquareIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"circle\")}\r\n                className={tool === \"circle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <CircleIcon />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Row 2: Triangle, Diamond, Oval */}\r\n            <div className=\"shape-row\">\r\n              <button\r\n                onClick={() => handleToolChange(\"triangle\")}\r\n                className={tool === \"triangle\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <TriangleIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"diamond\")}\r\n                className={tool === \"diamond\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <DiamondIcon />\r\n              </button>\r\n              <button\r\n                onClick={() => handleToolChange(\"oval\")}\r\n                className={tool === \"oval\" ? \"active-tool\" : \"\"}\r\n              >\r\n                <OvalIcon />\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Column 4: Edit */}\r\n          <div className=\"column\">\r\n            <h3>Edit</h3>\r\n            <button onClick={() => canvasRef.current?.clear()}>Clear</button>\r\n            <button onClick={undoShape}>Undo</button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Drawing Canvas */}\r\n        <div\r\n          onClick={drawShape}\r\n          onMouseDown={handleMouseDown}\r\n          onMouseMove={handleMouseMove}\r\n          onMouseUp={handleMouseUp}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"500px\",\r\n            position: \"relative\",\r\n            border: \"1px solid #ccc\",\r\n          }}\r\n        >\r\n          <CanvasDraw\r\n            ref={canvasRef}\r\n            brushColor={color}\r\n            brushRadius={tool === \"brush\" ? brushSize : 0} // Disable brush for shapes\r\n            lazyRadius={0}\r\n            canvasWidth={800} // Fixed canvas width\r\n            canvasHeight={500} // Fixed canvas height\r\n            hideGrid\r\n            className=\"drawing-canvas\"\r\n          />\r\n        </div>\r\n\r\n        {/* Text Input for Notes */}\r\n        <textarea\r\n          className=\"note-input\"\r\n          placeholder=\"Write your note...\"\r\n          value={note}\r\n          onChange={(e) => setNote(e.target.value)}\r\n        />\r\n\r\n<div className=\"absolute right-4 bottom-4\">\r\n  <Button \r\n    onClick={() => navigate('/gallery')} \r\n    className=\"bg-purple-600 hover:bg-purple-700 text-white font-semibold rounded-lg px-4 py-2 shadow-lg\"\r\n  >\r\n    Go to Gallery\r\n  </Button>\r\n</div>\r\n\r\n        {/* Buttons for Save */}\r\n        <div className=\"btn-group\">\r\n          <button onClick={saveDrawing}>Save Drawing</button>\r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteItCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}