{"ast":null,"code":"var _jsxFileName = \"D:\\\\drawing-app\\\\src\\\\components\\\\UploadComponent.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadButton = () => {\n  _s();\n  const [isUploading, setIsUploading] = useState(false);\n  const handleUpload = () => {\n    // Open file selector dialog\n    const fileInput = document.createElement('input');\n    fileInput.type = 'file';\n    fileInput.accept = 'image/*';\n    fileInput.onchange = event => {\n      const file = event.target.files[0];\n      if (file) {\n        uploadFile(file);\n      }\n    };\n    fileInput.click();\n  };\n  const uploadFile = async file => {\n    setIsUploading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    try {\n      console.log('Uploading image to backend...');\n      const response = await fetch('http://localhost:5000/api/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Failed to upload image');\n      }\n      const result = await response.json();\n      console.log('Upload successful:', result);\n      alert('Image uploaded successfully!');\n    } catch (error) {\n      console.error('Error uploading image:', error);\n      alert('Failed to upload image');\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleUpload,\n    disabled: isUploading,\n    style: {\n      padding: '10px 20px',\n      backgroundColor: '#4CAF50',\n      color: 'white',\n      border: 'none',\n      borderRadius: '4px',\n      cursor: isUploading ? 'not-allowed' : 'pointer',\n      fontSize: '16px'\n    },\n    children: isUploading ? 'Uploading...' : 'Upload Image'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadButton, \"iM8/aiMEO5Xrk8fXFL7kjRs1wVs=\");\n_c = UploadButton;\nconst Upload = ({\n  onUploadSuccess\n}) => {\n  _s2();\n  const [file, setFile] = useState(null);\n  const [isUploading, setIsUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError(null);\n\n    // Validate file exists\n    if (!file) {\n      setError('Please select a file to upload');\n      return;\n    }\n\n    // Validate file type\n    const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\n    if (!validTypes.includes(file.type)) {\n      setError('Only JPG, PNG, or GIF files are allowed');\n      return;\n    }\n\n    // Validate file size (10MB limit)\n    if (file.size > 10 * 1024 * 1024) {\n      setError('File size must be less than 10MB');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file); // Must match backend's expected field name\n\n    setIsUploading(true);\n    try {\n      const response = await axios.post('http://localhost:5000/api/gallery/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        timeout: 30000\n        // withCredentials: true, // Uncomment if using cookies/auth\n      });\n      if (!response.data.success) {\n        throw new Error(response.data.error || 'Upload failed');\n      }\n      alert(`Upload successful! URL: ${response.data.url}`);\n      if (onUploadSuccess) onUploadSuccess();\n    } catch (error) {\n      console.error('Upload error:', error);\n\n      // Enhanced error messages\n      let errorMessage = 'Upload failed. Please try again.';\n      if (error.code === 'ECONNABORTED') {\n        errorMessage = 'Request timed out. Please try again.';\n      } else if (error.response) {\n        var _error$response$data;\n        // Server responded with error status\n        errorMessage = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || `Server error: ${error.response.status}`;\n      } else if (error.request) {\n        // No response received\n        errorMessage = 'No response from server. Check your connection.';\n      }\n      setError(errorMessage);\n    } finally {\n      setIsUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Artwork\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg, image/png, image/gif\",\n        onChange: e => setFile(e.target.files[0]),\n        disabled: isUploading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isUploading || !file,\n        className: isUploading ? 'uploading' : '',\n        children: isUploading ? 'Uploading...' : 'Upload'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .upload-container {\n          max-width: 500px;\n          margin: 0 auto;\n          padding: 20px;\n          border: 1px solid #ddd;\n          border-radius: 8px;\n        }\n        .error-message {\n          color: #d32f2f;\n          margin: 10px 0;\n          padding: 10px;\n          background: #fdecea;\n          border-radius: 4px;\n        }\n        button {\n          padding: 10px 15px;\n          background: #4CAF50;\n          color: white;\n          border: none;\n          border-radius: 4px;\n          cursor: pointer;\n          font-size: 16px;\n          margin-top: 10px;\n        }\n        button:disabled, button.uploading {\n          background: #cccccc;\n          cursor: not-allowed;\n        }\n        input[type=\"file\"] {\n          margin: 10px 0;\n          padding: 8px;\n          width: 100%;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 5\n  }, this);\n};\n_s2(Upload, \"z6jSOl1pLEfrQVk/eCiOePEOXXo=\");\n_c2 = Upload;\nexport default Upload;\nvar _c, _c2;\n$RefreshReg$(_c, \"UploadButton\");\n$RefreshReg$(_c2, \"Upload\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","UploadButton","_s","isUploading","setIsUploading","handleUpload","fileInput","document","createElement","type","accept","onchange","event","file","target","files","uploadFile","click","formData","FormData","append","console","log","response","fetch","method","body","ok","Error","result","json","alert","error","onClick","disabled","style","padding","backgroundColor","color","border","borderRadius","cursor","fontSize","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Upload","onUploadSuccess","_s2","setFile","setError","handleSubmit","e","preventDefault","validTypes","includes","size","post","headers","timeout","data","success","url","errorMessage","code","_error$response$data","status","request","className","onSubmit","onChange","jsx","_c2","$RefreshReg$"],"sources":["D:/drawing-app/src/components/UploadComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nconst UploadButton = () => {\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  \r\n  const handleUpload = () => {\r\n    // Open file selector dialog\r\n    const fileInput = document.createElement('input');\r\n    fileInput.type = 'file';\r\n    fileInput.accept = 'image/*';\r\n    fileInput.onchange = (event) => {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        uploadFile(file);\r\n      }\r\n    };\r\n    fileInput.click();\r\n  };\r\n  \r\n  const uploadFile = async (file) => {\r\n    setIsUploading(true);\r\n    \r\n    const formData = new FormData();\r\n    formData.append('image', file);\r\n    \r\n    try {\r\n      console.log('Uploading image to backend...');\r\n      const response = await fetch('http://localhost:5000/api/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to upload image');\r\n      }\r\n      \r\n      const result = await response.json();\r\n      console.log('Upload successful:', result);\r\n      alert('Image uploaded successfully!');\r\n      \r\n    } catch (error) {\r\n      console.error('Error uploading image:', error);\r\n      alert('Failed to upload image');\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      onClick={handleUpload}\r\n      disabled={isUploading}\r\n      style={{ \r\n        padding: '10px 20px', \r\n        backgroundColor: '#4CAF50', \r\n        color: 'white', \r\n        border: 'none', \r\n        borderRadius: '4px', \r\n        cursor: isUploading ? 'not-allowed' : 'pointer',\r\n        fontSize: '16px'\r\n      }}\r\n    >\r\n      {isUploading ? 'Uploading...' : 'Upload Image'}\r\n    </button>\r\n  );\r\n};\r\nconst Upload = ({ onUploadSuccess }) => {\r\n  const [file, setFile] = useState(null);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError(null);\r\n\r\n    // Validate file exists\r\n    if (!file) {\r\n      setError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    // Validate file type\r\n    const validTypes = ['image/jpeg', 'image/png', 'image/gif'];\r\n    if (!validTypes.includes(file.type)) {\r\n      setError('Only JPG, PNG, or GIF files are allowed');\r\n      return;\r\n    }\r\n\r\n    // Validate file size (10MB limit)\r\n    if (file.size > 10 * 1024 * 1024) {\r\n      setError('File size must be less than 10MB');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);  // Must match backend's expected field name\r\n\r\n    setIsUploading(true);\r\n\r\n    try {\r\n      const response = await axios.post(\r\n        'http://localhost:5000/api/gallery/upload',\r\n        formData,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n          timeout: 30000,\r\n          // withCredentials: true, // Uncomment if using cookies/auth\r\n        }\r\n      );\r\n\r\n      if (!response.data.success) {\r\n        throw new Error(response.data.error || 'Upload failed');\r\n      }\r\n\r\n      alert(`Upload successful! URL: ${response.data.url}`);\r\n      if (onUploadSuccess) onUploadSuccess();\r\n\r\n    } catch (error) {\r\n      console.error('Upload error:', error);\r\n      \r\n      // Enhanced error messages\r\n      let errorMessage = 'Upload failed. Please try again.';\r\n      \r\n      if (error.code === 'ECONNABORTED') {\r\n        errorMessage = 'Request timed out. Please try again.';\r\n      } else if (error.response) {\r\n        // Server responded with error status\r\n        errorMessage = error.response.data?.error || \r\n                      `Server error: ${error.response.status}`;\r\n      } else if (error.request) {\r\n        // No response received\r\n        errorMessage = 'No response from server. Check your connection.';\r\n      }\r\n\r\n      setError(errorMessage);\r\n    } finally {\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"upload-container\">\r\n      <h2>Upload Artwork</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/jpeg, image/png, image/gif\"\r\n          onChange={(e) => setFile(e.target.files[0])}\r\n          disabled={isUploading}\r\n        />\r\n        \r\n        {error && <div className=\"error-message\">{error}</div>}\r\n        \r\n        <button\r\n          type=\"submit\"\r\n          disabled={isUploading || !file}\r\n          className={isUploading ? 'uploading' : ''}\r\n        >\r\n          {isUploading ? 'Uploading...' : 'Upload'}\r\n        </button>\r\n      </form>\r\n\r\n      <style jsx>{`\r\n        .upload-container {\r\n          max-width: 500px;\r\n          margin: 0 auto;\r\n          padding: 20px;\r\n          border: 1px solid #ddd;\r\n          border-radius: 8px;\r\n        }\r\n        .error-message {\r\n          color: #d32f2f;\r\n          margin: 10px 0;\r\n          padding: 10px;\r\n          background: #fdecea;\r\n          border-radius: 4px;\r\n        }\r\n        button {\r\n          padding: 10px 15px;\r\n          background: #4CAF50;\r\n          color: white;\r\n          border: none;\r\n          border-radius: 4px;\r\n          cursor: pointer;\r\n          font-size: 16px;\r\n          margin-top: 10px;\r\n        }\r\n        button:disabled, button.uploading {\r\n          background: #cccccc;\r\n          cursor: not-allowed;\r\n        }\r\n        input[type=\"file\"] {\r\n          margin: 10px 0;\r\n          padding: 8px;\r\n          width: 100%;\r\n        }\r\n      `}</style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Upload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}