{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Helper function to handle API responses\nconst handleResponse = async response => {\n  const data = await response.json();\n  if (!response.ok) {\n    throw new Error(data.message || `Request failed with status ${response.status}`);\n  }\n  return data;\n};\n\n// Signup function\nexport const signup = async userData => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/signup`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(userData)\n    });\n    return await handleResponse(response);\n  } catch (error) {\n    console.error(\"Signup Error:\", error);\n    throw new Error(error.message || \"Failed to signup. Please try again later.\");\n  }\n};\n\n// Login function\nexport const login = async credentials => {\n  try {\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(credentials)\n    });\n    const data = await handleResponse(response);\n\n    // Store token in localStorage\n    if (data.token) {\n      localStorage.setItem(\"token\", data.token);\n    }\n    return data;\n  } catch (error) {\n    console.error(\"Login Error:\", error);\n    throw new Error(error.message || \"Failed to login. Please try again later.\");\n  }\n};\n\n// Logout function\nexport const logout = () => {\n  localStorage.removeItem(\"token\");\n};\n\n// Check if user is authenticated\nexport const isAuthenticated = () => {\n  return !!localStorage.getItem(\"token\");\n};\n\n// Get current user's token\nexport const getToken = () => {\n  return localStorage.getItem(\"token\");\n};","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","handleResponse","response","data","json","ok","Error","message","status","signup","userData","fetch","method","headers","body","JSON","stringify","error","console","login","credentials","token","localStorage","setItem","logout","removeItem","isAuthenticated","getItem","getToken"],"sources":["D:/drawing-app/src/services/authService.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\n// Helper function to handle API responses\r\nconst handleResponse = async (response) => {\r\n  const data = await response.json();\r\n  if (!response.ok) {\r\n    throw new Error(data.message || `Request failed with status ${response.status}`);\r\n  }\r\n  return data;\r\n};\r\n\r\n// Signup function\r\nexport const signup = async (userData) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/signup`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(userData),\r\n    });\r\n    return await handleResponse(response);\r\n  } catch (error) {\r\n    console.error(\"Signup Error:\", error);\r\n    throw new Error(error.message || \"Failed to signup. Please try again later.\");\r\n  }\r\n};\r\n\r\n// Login function\r\nexport const login = async (credentials) => {\r\n  try {\r\n    const response = await fetch(`${API_BASE_URL}/auth/login`, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(credentials),\r\n    });\r\n    const data = await handleResponse(response);\r\n\r\n    // Store token in localStorage\r\n    if (data.token) {\r\n      localStorage.setItem(\"token\", data.token);\r\n    }\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Login Error:\", error);\r\n    throw new Error(error.message || \"Failed to login. Please try again later.\");\r\n  }\r\n};\r\n\r\n// Logout function\r\nexport const logout = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\n// Check if user is authenticated\r\nexport const isAuthenticated = () => {\r\n  return !!localStorage.getItem(\"token\");\r\n};\r\n\r\n// Get current user's token\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};"],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;AAEvD;AACA,MAAMC,cAAc,GAAG,MAAOC,QAAQ,IAAK;EACzC,MAAMC,IAAI,GAAG,MAAMD,QAAQ,CAACE,IAAI,CAAC,CAAC;EAClC,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;IAChB,MAAM,IAAIC,KAAK,CAACH,IAAI,CAACI,OAAO,IAAI,8BAA8BL,QAAQ,CAACM,MAAM,EAAE,CAAC;EAClF;EACA,OAAOL,IAAI;AACb,CAAC;;AAED;AACA,OAAO,MAAMM,MAAM,GAAG,MAAOC,QAAQ,IAAK;EACxC,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGd,YAAY,cAAc,EAAE;MAC1De,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ;IAC/B,CAAC,CAAC;IACF,OAAO,MAAMT,cAAc,CAACC,QAAQ,CAAC;EACvC,CAAC,CAAC,OAAOe,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;IACrC,MAAM,IAAIX,KAAK,CAACW,KAAK,CAACV,OAAO,IAAI,2CAA2C,CAAC;EAC/E;AACF,CAAC;;AAED;AACA,OAAO,MAAMY,KAAK,GAAG,MAAOC,WAAW,IAAK;EAC1C,IAAI;IACF,MAAMlB,QAAQ,GAAG,MAAMS,KAAK,CAAC,GAAGd,YAAY,aAAa,EAAE;MACzDe,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACI,WAAW;IAClC,CAAC,CAAC;IACF,MAAMjB,IAAI,GAAG,MAAMF,cAAc,CAACC,QAAQ,CAAC;;IAE3C;IACA,IAAIC,IAAI,CAACkB,KAAK,EAAE;MACdC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEpB,IAAI,CAACkB,KAAK,CAAC;IAC3C;IACA,OAAOlB,IAAI;EACb,CAAC,CAAC,OAAOc,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;IACpC,MAAM,IAAIX,KAAK,CAACW,KAAK,CAACV,OAAO,IAAI,0CAA0C,CAAC;EAC9E;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,MAAM,GAAGA,CAAA,KAAM;EAC1BF,YAAY,CAACG,UAAU,CAAC,OAAO,CAAC;AAClC,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAGA,CAAA,KAAM;EACnC,OAAO,CAAC,CAACJ,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;AACxC,CAAC;;AAED;AACA,OAAO,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAC5B,OAAON,YAAY,CAACK,OAAO,CAAC,OAAO,CAAC;AACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}